<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Quick_News_App.Custom_User_Controls">

	<Style TargetType="Border" x:Key="BG_MainForm">
		<Setter Property="CornerRadius" Value="5"/>
		<Setter Property="BorderThickness" Value="8"/>
		<Setter Property="Background">
			<Setter.Value>
				<SolidColorBrush Color="{DynamicResource Form_BackgroundColor}"/>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderBrush">
			<Setter.Value>
				<SolidColorBrush Color="{DynamicResource Form_BorderColor}"/>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Grid" x:Key="BG_TitleBar">
		<Setter Property="Background">
			<Setter.Value>
				<SolidColorBrush Color="{DynamicResource Form_BorderColor}"/>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="TextBlock" x:Key="FG_TextBlock">
		<Setter Property="Foreground">
			<Setter.Value>
				<SolidColorBrush Color="{DynamicResource TextColor}"/>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="TextBlock" x:Key="FG_Headline_TextBlock">
		<Setter Property="Foreground">
			<Setter.Value>
				<SolidColorBrush Color="{DynamicResource HeadlineTextColor}"/>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="TextBlock" x:Key="FG_Category_TextBlock">
		<Setter Property="Foreground">
			<Setter.Value>
				<SolidColorBrush Color="{DynamicResource CategoryTextColor}"/>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="local:CustomButton" x:Key="CustomButtonColor">
		<Setter Property="CusBtn_Background" >
			<Setter.Value>
				<SolidColorBrush Color="{DynamicResource ButtonColor_Normal}"/>
			</Setter.Value>
		</Setter>
		<Setter Property="CusBtn_Hover">
			<Setter.Value>
				<SolidColorBrush Color="{DynamicResource ButtonColor_Hover}"/>
			</Setter.Value>
		</Setter>
		<Setter Property="CusBtn_Foreground">
			<Setter.Value>
				<SolidColorBrush Color="{DynamicResource ButtonColor_Text}"/>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="local:CustomTextBoxWithPlaceholder" x:Key="CustomTextboxColor">
		<Setter Property="PlaceholderColor">
			<Setter.Value>
				<SolidColorBrush Color="{DynamicResource TextBoxColor_Hint}"/>
			</Setter.Value>
		</Setter>
		<Setter Property="OutlineNormal">
			<Setter.Value>
				<RadialGradientBrush>
					<GradientStop Color="{DynamicResource TextBoxColor_Outline}"/>
				</RadialGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="ForegroundNormal">
			<Setter.Value>
				<RadialGradientBrush>
					<GradientStop Color="{DynamicResource TextBoxColor_Foreground}"/>
				</RadialGradientBrush>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="local:CustomRoundedButtonWithImage" x:Key="RoundImageButtonColor">
		<Setter Property="BackgroundColor">
			<Setter.Value>
				<SolidColorBrush Color="{DynamicResource ButtonColor_Normal}"/>
			</Setter.Value>
		</Setter>
		<Setter Property="HoverColor">
			<Setter.Value>
				<SolidColorBrush Color="{DynamicResource ButtonColor_Hover}"/>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="local:CustomButtonWithImage" x:Key="NormalImageButtonColor">
		<Setter Property="BackgroundColor">
			<Setter.Value>
				<SolidColorBrush Color="{DynamicResource ButtonColor_Normal}"/>
			</Setter.Value>
		</Setter>
		<Setter Property="HoverColor">
			<Setter.Value>
				<SolidColorBrush Color="{DynamicResource ButtonColor_Hover}"/>
			</Setter.Value>
		</Setter>
	</Style>

	<SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="White" />
	<SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
	<SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
	<SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />
	<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Black" Opacity="0.3"/>
	
	<ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="20" />
			</Grid.ColumnDefinitions>
			<Border Grid.Column="1" BorderBrush="{DynamicResource TextBoxColor_Stroke}" Name="ButtonBorder"
					  CornerRadius="0 10 10 0" BorderThickness="0" 
					  Background="{StaticResource ComboBoxNormalBackgroundBrush}" >
			</Border>
			
			<Border Grid.ColumnSpan="2" Name="Border"
          BorderBrush="{DynamicResource TextBoxColor_Stroke}" 
          CornerRadius="10" BorderThickness="3" 
          Background="{StaticResource ComboBoxNormalBackgroundBrush}" >
				<Border.Effect>
					<DropShadowEffect ShadowDepth="0" BlurRadius="2"/>
				</Border.Effect>
			</Border>
	

			<Path Name="Arrow" Grid.Column="1" 
        Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
        HorizontalAlignment="Center" Fill="{DynamicResource TextBoxColor_Stroke}" Margin="0 0 12 0"
        VerticalAlignment="Center" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="UIElement.IsMouseOver" Value="True">
				<Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
			</Trigger>
			<Trigger Property="ToggleButton.IsChecked" Value="True">
				<Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
				<Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
			</Trigger>
			<Trigger Property="UIElement.IsEnabled" Value="False">
				<Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
				<Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
				<Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
				<Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
				<Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style TargetType="{x:Type ComboBox}" x:Key="ComboBoxFlatStyle">
		<Setter Property="IsEditable" Value="False"/>
		<Setter Property="IsTextSearchEnabled" Value="True"/>
		<Setter Property="IsTextSearchCaseSensitive" Value="False"/>
		<Setter Property="MinWidth" Value="100"/>
		<Setter Property="Margin" Value="3"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>

		<Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
		<Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
		<Setter Property="TextElement.Foreground" Value="Black"/>
		<Setter Property="IsDropDownOpen" Value="False"/>

		<Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid>
						<ToggleButton Name="ToggleButton" Grid.Column="2"
									ClickMode="Press" Focusable="False"
									IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
									Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

						<ContentPresenter Name="ContentSite" Margin="10, 3, 23, 3" IsHitTestVisible="False"
                          HorizontalAlignment="Left" VerticalAlignment="Center"                            
                          Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                          ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
						<TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                 IsReadOnly="{TemplateBinding IsReadOnly}"
                 Visibility="Hidden" Background="Transparent"
                 HorizontalAlignment="Left" VerticalAlignment="Center"
                 Focusable="True" >
							<TextBox.Template>
								<ControlTemplate TargetType="TextBox" >
									<Border Name="PART_ContentHost" CornerRadius="4" Focusable="False" />
								</ControlTemplate>
							</TextBox.Template>
						</TextBox>
						<!-- Popup showing items -->
						<Popup Name="Popup" Placement="Bottom"
							   Focusable="False" AllowsTransparency="True"
							   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
							   PopupAnimation="Slide">
							<Grid Name="DropDown" SnapsToDevicePixels="True"
								MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
								MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" Background="Transparent">
								<Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
									CornerRadius="10" BorderThickness="5" 
									BorderBrush="{DynamicResource ComboBoxItemColor_Hover}">
									<Border.Effect>
										<DropShadowEffect ShadowDepth="0" BlurRadius="2"/>
									</Border.Effect>
								</Border>
								<ScrollViewer Margin="4" SnapsToDevicePixels="True">
									<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
								</ScrollViewer>
							</Grid>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="ItemsControl.HasItems" Value="False">
							<Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
						</Trigger>
						<Trigger Property="UIElement.IsEnabled" Value="False">
							<Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
						</Trigger>
						<Trigger Property="ItemsControl.IsGrouping" Value="True">
							<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
						</Trigger>
						<Trigger Property="ComboBox.IsEditable" Value="True">
							<Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
							<Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
							<Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="ComboBoxItem">
		<Style.Setters>
			<Setter Property="Foreground" Value="{DynamicResource TextBoxColor_Stroke}"/>
			<Setter Property="FontSize" Value="20"/>
			<Setter Property="Padding" Value="6 2"/>
		</Style.Setters>
	</Style>

</ResourceDictionary>